// Centered container element

@mixin center-block() {
    margin-left: auto;
    margin-right: auto;
}

@mixin container-fixed($gutter: $grid-gutter-width) {
    width: 100%;
    @include center-block();
    padding-left: $gutter / 2;
    padding-right: $gutter / 2;

    @include clearfix();
}

@mixin make-row() {
    margin-left: $grid-gutter-width / -2;

    @include clearfix();
}


@mixin make-grid-columns() {
    $col-xs-class: '.col';
    $col-sm-class: '.col';
    $col-md-class: '.col';
    $col-lg-class: '.col';
    
    @each $item in $screen-list {
        @for $i from 1 to ($grid-columns+1) {
            @if($item == '-xs') {
                @if ($i == 1) {
                    $col-xs-class: #{$col-xs-class}#{$item}#{'-'}#{$i};
                } @else {
                    $col-xs-class: #{$col-xs-class}#{' , .col'}#{$item}#{'-'}#{$i};
                }
            }

            @if($item == '-sm') {
                @if ($i == 1) {
                    $col-sm-class: #{$col-sm-class}#{$item}#{'-'}#{$i};
                } @else {
                    $col-sm-class: #{$col-sm-class}#{' , .col'}#{$item}#{'-'}#{$i};
                }
            }

            @if($item == '-md') {
                @if ($i == 1) {
                    $col-md-class: #{$col-md-class}#{$item}#{'-'}#{$i};
                } @else {
                    $col-md-class: #{$col-md-class}#{' , .col'}#{$item}#{'-'}#{$i};
                }
            }

            @if($item == '-lg') {
                @if ($i == 1) {
                    $col-lg-class: #{$col-lg-class}#{$item}#{'-'}#{$i};
                } @else {
                    $col-lg-class: #{$col-lg-class}#{' , .col'}#{$item}#{'-'}#{$i};
                }
            }
        }
    }
    
    @include default-columns($col-xs-class, $col-md-class, $col-sm-class, $col-lg-class);

    @include columns-left($col-xs-class, $col-md-class, $col-sm-class, $col-lg-class);

    @include column-width();
}

// Prevent columns from collapsing when empty
@mixin default-columns($col-xs-class, $col-md-class, $col-sm-class, $col-lg-class) {
    #{$col-xs-class},
    #{$col-md-class},
    #{$col-sm-class},
    #{$col-lg-class} {
        min-height: 1px;
        position: relative;
        padding-left: $grid-gutter-width / 2;
    }
}

@mixin columns-left($col-xs-class, $col-md-class, $col-sm-class, $col-lg-class) {
    @media screen and (min-width: $screen-xs-min) {
        #{$col-xs-class} {
            float: left;
        }
    }

    @media screen and (min-width: $screen-sm-min) {
        #{$col-sm-class} {
            float: left;
        }
    }

    @media screen and (min-width: $screen-md-min) {
        #{$col-md-class} {
            float: left;
        }
    }

    @media screen and (min-width: $screen-lg-min) {
        #{$col-lg-class} {
            float: left;
        }
    }
}

@mixin column-width() {
    @each $item in $screen-list {
        $index: index($screen-list, $item);

        @media screen and (min-width: nth($screen-list-name, $index)) {
            @for $i from 1 to ($grid-columns+1) {
                .col#{$item}-offset-#{$i - 1} {
                    margin-left: percentage(($i - 1)/$grid-columns);
                }

                .col#{$item}-#{$i} {
                    width: percentage($i/$grid-columns);
                }

                .col#{$item}-pull-#{$i} { 
                    right: percentage($i/$grid-columns);
                }

                .col#{$item}-push-#{$i} { 
                    left: percentage($i/$grid-columns);
                }
            }
        }
    }
}